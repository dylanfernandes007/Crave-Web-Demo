<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="724" started-at="2021-02-07T13:52:37 EST" finished-at="2021-02-07T13:52:38 EST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="724" started-at="2021-02-07T13:52:37 EST" finished-at="2021-02-07T13:52:38 EST">
      <class name="extentreports.TestReports">
        <test-method status="PASS" signature="setReport()[pri:0, instance:extentreports.TestReports@34cd072c]" name="setReport" is-config="true" duration-ms="274" started-at="2021-02-07T13:52:37 EST" finished-at="2021-02-07T13:52:38 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setReport -->
        <test-method status="SKIP" signature="doComposeEmail()[pri:0, instance:extentreports.TestReports@34cd072c]" name="doComposeEmail" duration-ms="10" started-at="2021-02-07T13:52:38 EST" finished-at="2021-02-07T13:52:38 EST">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test
at extentreports.TestReports.doComposeEmail(TestReports.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doComposeEmail -->
        <test-method status="PASS" signature="afterTestCase(org.testng.ITestResult)[pri:0, instance:extentreports.TestReports@34cd072c]" name="afterTestCase" is-config="true" duration-ms="12" started-at="2021-02-07T13:52:38 EST" finished-at="2021-02-07T13:52:38 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=doComposeEmail status=SKIP method=TestReports.doComposeEmail()[pri:0, instance:extentreports.TestReports@34cd072c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestCase -->
        <test-method status="PASS" signature="doLogin()[pri:0, instance:extentreports.TestReports@34cd072c]" name="doLogin" duration-ms="5" started-at="2021-02-07T13:52:38 EST" finished-at="2021-02-07T13:52:38 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method status="PASS" signature="afterTestCase(org.testng.ITestResult)[pri:0, instance:extentreports.TestReports@34cd072c]" name="afterTestCase" is-config="true" duration-ms="0" started-at="2021-02-07T13:52:38 EST" finished-at="2021-02-07T13:52:38 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=doLogin status=SUCCESS method=TestReports.doLogin()[pri:0, instance:extentreports.TestReports@34cd072c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestCase -->
        <test-method status="FAIL" signature="doUserReg()[pri:0, instance:extentreports.TestReports@34cd072c]" name="doUserReg" duration-ms="5" started-at="2021-02-07T13:52:38 EST" finished-at="2021-02-07T13:52:38 EST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failing user reg test]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failing user reg test
at org.testng.Assert.fail(Assert.java:99)
at extentreports.TestReports.doUserReg(TestReports.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doUserReg -->
        <test-method status="PASS" signature="afterTestCase(org.testng.ITestResult)[pri:0, instance:extentreports.TestReports@34cd072c]" name="afterTestCase" is-config="true" duration-ms="0" started-at="2021-02-07T13:52:38 EST" finished-at="2021-02-07T13:52:38 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=doUserReg status=FAILURE method=TestReports.doUserReg()[pri:0, instance:extentreports.TestReports@34cd072c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestCase -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:extentreports.TestReports@34cd072c]" name="endReport" is-config="true" duration-ms="379" started-at="2021-02-07T13:52:38 EST" finished-at="2021-02-07T13:52:38 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- extentreports.TestReports -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
